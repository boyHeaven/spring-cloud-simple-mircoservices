buildscript {

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
        jcenter()
    }

    ext {
        springBootVersion = '1.5.7.RELEASE'
        managementPluginVersion = '0.5.6.RELEASE'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${managementPluginVersion}")
    }
}

allprojects {

    group 'cn.com.yxn.spring-cloud-simple-microservices'

    version '1.0-SNAPSHOT'

    apply from: "${rootDir}/gradle/configurations.gradle"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 1.8

    def cfg = ext.configs
    def libs = ext.libraries

    // 可以使用bootRun: -Dspring.profiles.active=dev\pro\default
    bootRun {
        systemProperties = System.properties
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
        jcenter()
    }

//    注意顺序
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-actuator:${libs.springBoot}")
        compile("org.springframework.cloud:spring-cloud-starter:1.3.0.M1")
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server:${libs.springCloudVersion}")
        compile("org.springframework.boot:spring-boot-starter:${libs.springBoot}")
        testCompile("org.springframework.boot:spring-boot-starter-test:${libs.springBoot}")
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR3"
        }
    }
}

configure(rootProject) {

    description = 'The SpringCloud Microservices Project.'

    apply plugin: 'groovy'

    def cfg = ext.configs
    def libs = ext.libraries

    task wrapper(type: Wrapper) {
        group = 'build setup'
        description = 'Generates gradlew[.bat] scripts.'

        gradleVersion = "${libs.gradle}"
        distributionUrl = "http://services.gradle.org/distributions/gradle-${libs.gradle}-all.zip"
    }
    
    // don't publish the default jar for the root project
    configurations.archives.artifacts.clear()
}